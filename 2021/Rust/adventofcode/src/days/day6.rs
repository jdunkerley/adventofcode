
fn process(input: &str, iters: u16) {
    let fish: Vec<u16> = input.split(',').map(|x| x.parse::<u16>().unwrap()).collect();

    let mut counts = [0_u64; 9];
    for f in fish {
        counts[f as usize] += 1;
    }

    for _ in 0..iters {
        let to_add = counts[0];
        for i in 0..8 {
            counts[i] = counts[i + 1] + if i == 6 { to_add } else { 0 };
        }
        counts[8] = to_add;
    }

    println!("{} after {} iterations", counts.iter().sum::<u64>(), iters);
}

pub fn run() {
    let test_input = "3,4,3,1,2";

    println!("Test Input:");
    process(test_input, 80);
    process(test_input, 256);

    let input = "1,1,3,1,3,2,1,3,1,1,3,1,1,2,1,3,1,1,3,5,1,1,1,3,1,2,1,1,1,1,4,4,1,2,1,2,1,1,1,5,3,2,1,5,2,5,3,3,2,2,5,4,1,1,4,4,1,1,1,1,1,1,5,1,2,4,3,2,2,2,2,1,4,1,1,5,1,3,4,4,1,1,3,3,5,5,3,1,3,3,3,1,4,2,2,1,3,4,1,4,3,3,2,3,1,1,1,5,3,1,4,2,2,3,1,3,1,2,3,3,1,4,2,2,4,1,3,1,1,1,1,1,2,1,3,3,1,2,1,1,3,4,1,1,1,1,5,1,1,5,1,1,1,4,1,5,3,1,1,3,2,1,1,3,1,1,1,5,4,3,3,5,1,3,4,3,3,1,4,4,1,2,1,1,2,1,1,1,2,1,1,1,1,1,5,1,1,2,1,5,2,1,1,2,3,2,3,1,3,1,1,1,5,1,1,2,1,1,1,1,3,4,5,3,1,4,1,1,4,1,4,1,1,1,4,5,1,1,1,4,1,3,2,2,1,1,2,3,1,4,3,5,1,5,1,1,4,5,5,1,1,3,3,1,1,1,1,5,5,3,3,2,4,1,1,1,1,1,5,1,1,2,5,5,4,2,4,4,1,1,3,3,1,5,1,1,1,1,1,1";
    println!("Real Input:");
    process(input, 80);
    process(input, 256);
}
